package com.tcs.bms.service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

import com.tcs.bms.dto.LoginRequest;
import com.tcs.bms.entity.User;
import com.tcs.bms.repository.AccountRepository;
import com.tcs.bms.repository.UserRepository;
import com.tcs.bms.entity.Account;


@Service
public class UserService {

    @Autowired
    private UserRepository repository;
    
   
    @Autowired
    private AccountRepository accountRepository;

    @Autowired
    private PasswordEncoder passwordEncoder;


    public String createUser(User user) {
    	
    	user.setPassword(passwordEncoder.encode(user.getPassword()));
        User userDetails = repository.save(user);
        
        String accountNumber = generateUniqueAccountNumber();
        Account accountObject = new Account();
        account.setAccountNumber(accountNumber);
        account.setBalance(0.0);
        Account account = accountRepository.save(account);

       Account accounts = accountService.createAccount(savedUser);

       savedUser.setAccount(account);
       userRepository.save(savedUser);
       
       System.out.println(savedUser.getAccount().getAccountNumber());
       System.out.println(account.getUser().getName());

       
      
        user.setPassword(passwordEncoder.encode(user.getPassword()));
        repository.save(user);
        return savedUser;
    }
    
    
}
